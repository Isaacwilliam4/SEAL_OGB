Results will be saved in results/world_trade_1995_20240514114314
Command line input: python seal_link_pred.py --dataset world_trade_1995 --num_hops 1 --use_feature --eval_steps 1 --epochs 10 --dynamic_train --dynamic_val --dynamic_test --train_percent 2 --val_percent 1 --test_percent 1
 is saved.
Data unavailable, downloading...
getting trade data...
  0%|          | 0/4981 [00:00<?, ?it/s]  1%|          | 46/4981 [00:00<00:10, 459.19it/s]  2%|▏         | 97/4981 [00:00<00:10, 474.60it/s]  3%|▎         | 148/4981 [00:00<00:09, 488.34it/s]  4%|▍         | 197/4981 [00:00<00:09, 487.73it/s]  5%|▍         | 247/4981 [00:00<00:09, 491.29it/s]  6%|▌         | 297/4981 [00:00<00:09, 492.46it/s]  7%|▋         | 348/4981 [00:00<00:09, 492.38it/s]  8%|▊         | 399/4981 [00:00<00:09, 496.75it/s]  9%|▉         | 449/4981 [00:00<00:09, 490.31it/s] 10%|█         | 499/4981 [00:01<00:09, 488.50it/s] 11%|█         | 548/4981 [00:01<00:09, 487.52it/s] 12%|█▏        | 597/4981 [00:01<00:09, 484.47it/s] 13%|█▎        | 646/4981 [00:01<00:09, 480.41it/s] 14%|█▍        | 695/4981 [00:01<00:09, 471.93it/s] 15%|█▍        | 743/4981 [00:01<00:08, 472.85it/s] 16%|█▌        | 791/4981 [00:01<00:08, 471.94it/s] 17%|█▋        | 839/4981 [00:01<00:08, 472.57it/s] 18%|█▊        | 887/4981 [00:01<00:08, 469.81it/s] 19%|█▉        | 936/4981 [00:01<00:08, 467.54it/s] 20%|█▉        | 986/4981 [00:02<00:08, 474.87it/s] 21%|██        | 1035/4981 [00:02<00:08, 477.10it/s] 22%|██▏       | 1085/4981 [00:02<00:08, 483.56it/s] 23%|██▎       | 1134/4981 [00:02<00:07, 481.34it/s] 24%|██▍       | 1184/4981 [00:02<00:07, 486.15it/s] 25%|██▍       | 1233/4981 [00:02<00:11, 330.16it/s] 26%|██▌       | 1282/4981 [00:02<00:10, 363.94it/s] 27%|██▋       | 1332/4981 [00:02<00:09, 392.64it/s] 28%|██▊       | 1380/4981 [00:03<00:08, 414.65it/s] 29%|██▊       | 1428/4981 [00:03<00:08, 431.29it/s] 30%|██▉       | 1477/4981 [00:03<00:07, 446.22it/s] 31%|███       | 1528/4981 [00:03<00:07, 463.83it/s] 32%|███▏      | 1579/4981 [00:03<00:07, 476.71it/s] 33%|███▎      | 1628/4981 [00:03<00:07, 474.78it/s] 34%|███▎      | 1677/4981 [00:03<00:06, 477.17it/s] 35%|███▍      | 1728/4981 [00:03<00:06, 484.54it/s] 36%|███▌      | 1777/4981 [00:03<00:06, 484.24it/s] 37%|███▋      | 1826/4981 [00:03<00:06, 485.43it/s] 38%|███▊      | 1877/4981 [00:04<00:06, 491.10it/s] 39%|███▊      | 1927/4981 [00:04<00:06, 492.28it/s] 40%|███▉      | 1977/4981 [00:04<00:06, 493.15it/s] 41%|████      | 2028/4981 [00:04<00:05, 498.11it/s] 42%|████▏     | 2078/4981 [00:04<00:05, 491.97it/s] 43%|████▎     | 2128/4981 [00:04<00:05, 492.70it/s] 44%|████▎     | 2179/4981 [00:04<00:05, 495.49it/s] 45%|████▍     | 2229/4981 [00:04<00:05, 482.30it/s] 46%|████▌     | 2278/4981 [00:04<00:05, 479.65it/s] 47%|████▋     | 2327/4981 [00:04<00:05, 481.10it/s] 48%|████▊     | 2376/4981 [00:05<00:05, 481.14it/s] 49%|████▊     | 2426/4981 [00:05<00:05, 484.80it/s] 50%|████▉     | 2476/4981 [00:05<00:05, 487.74it/s] 51%|█████     | 2526/4981 [00:05<00:05, 489.98it/s] 52%|█████▏    | 2576/4981 [00:05<00:04, 492.84it/s] 53%|█████▎    | 2628/4981 [00:05<00:04, 499.42it/s] 54%|█████▍    | 2679/4981 [00:05<00:04, 501.20it/s] 55%|█████▍    | 2730/4981 [00:05<00:04, 491.61it/s] 56%|█████▌    | 2781/4981 [00:05<00:04, 495.00it/s] 57%|█████▋    | 2832/4981 [00:05<00:04, 499.17it/s] 58%|█████▊    | 2882/4981 [00:06<00:04, 490.38it/s] 59%|█████▉    | 2932/4981 [00:06<00:04, 491.05it/s] 60%|█████▉    | 2982/4981 [00:06<00:04, 486.05it/s] 61%|██████    | 3031/4981 [00:06<00:04, 482.59it/s] 62%|██████▏   | 3080/4981 [00:06<00:03, 476.32it/s] 63%|██████▎   | 3129/4981 [00:06<00:03, 479.70it/s] 64%|██████▍   | 3177/4981 [00:06<00:03, 473.74it/s] 65%|██████▍   | 3225/4981 [00:06<00:03, 474.92it/s] 66%|██████▌   | 3273/4981 [00:06<00:03, 468.73it/s] 67%|██████▋   | 3322/4981 [00:07<00:03, 473.73it/s] 68%|██████▊   | 3370/4981 [00:07<00:03, 472.50it/s] 69%|██████▊   | 3418/4981 [00:07<00:03, 469.34it/s] 70%|██████▉   | 3465/4981 [00:07<00:03, 467.40it/s] 71%|███████   | 3513/4981 [00:07<00:03, 468.88it/s] 72%|███████▏  | 3562/4981 [00:07<00:03, 470.53it/s] 72%|███████▏  | 3611/4981 [00:07<00:02, 475.97it/s] 73%|███████▎  | 3659/4981 [00:07<00:02, 475.29it/s] 74%|███████▍  | 3707/4981 [00:07<00:03, 321.93it/s] 75%|███████▌  | 3758/4981 [00:08<00:03, 360.86it/s] 76%|███████▋  | 3806/4981 [00:08<00:03, 388.13it/s] 77%|███████▋  | 3853/4981 [00:08<00:02, 408.20it/s] 78%|███████▊  | 3900/4981 [00:08<00:02, 423.27it/s] 79%|███████▉  | 3946/4981 [00:08<00:02, 428.95it/s] 80%|████████  | 3994/4981 [00:08<00:02, 441.20it/s] 81%|████████  | 4043/4981 [00:08<00:02, 453.50it/s] 82%|████████▏ | 4092/4981 [00:08<00:01, 462.26it/s] 83%|████████▎ | 4142/4981 [00:08<00:01, 470.97it/s] 84%|████████▍ | 4192/4981 [00:09<00:01, 475.44it/s] 85%|████████▌ | 4240/4981 [00:09<00:01, 474.89it/s] 86%|████████▌ | 4289/4981 [00:09<00:01, 477.13it/s] 87%|████████▋ | 4337/4981 [00:09<00:01, 477.38it/s] 88%|████████▊ | 4387/4981 [00:09<00:01, 483.29it/s] 89%|████████▉ | 4436/4981 [00:09<00:01, 474.86it/s] 90%|█████████ | 4484/4981 [00:09<00:01, 473.50it/s] 91%|█████████ | 4532/4981 [00:09<00:00, 472.59it/s] 92%|█████████▏| 4580/4981 [00:09<00:00, 473.94it/s] 93%|█████████▎| 4628/4981 [00:09<00:00, 471.43it/s] 94%|█████████▍| 4676/4981 [00:10<00:00, 468.28it/s] 95%|█████████▍| 4723/4981 [00:10<00:00, 465.88it/s] 96%|█████████▌| 4770/4981 [00:10<00:00, 464.03it/s] 97%|█████████▋| 4819/4981 [00:10<00:00, 467.76it/s] 98%|█████████▊| 4868/4981 [00:10<00:00, 472.81it/s] 99%|█████████▊| 4916/4981 [00:10<00:00, 473.81it/s]100%|█████████▉| 4964/4981 [00:10<00:00, 473.41it/s]4982it [00:10, 466.44it/s]                          
0it [00:00, ?it/s]1it [00:00, 605.94it/s]
DATA: Data(edge_index=[2, 4981382], edge_attr=[4981382, 4], y=[4981382], num_nodes=238)
ROW: [  0   0   0 ... 237 237 237], COL:[  2   4   9 ... 229 229 236]
ROW: [  0   0   0 ... 232 235 236], COL:[  2   4   9 ... 237 237 237]
Traceback (most recent call last):
  File "seal_link_pred.py", line 759, in <module>
    split_edge = do_edge_split(dataset, fast_split=args.fast_split)
  File "/grphome/grp_supplychainai/SEAL_OGB/utils.py", line 238, in do_edge_split
    data = train_test_split_edges(data, val_ratio, test_ratio)
  File "/grphome/grp_supplychainai/.conda/envs/sealenv/lib/python3.8/site-packages/torch_geometric/deprecation.py", line 27, in wrapper
    return func(*args, **kwargs)
  File "/grphome/grp_supplychainai/.conda/envs/sealenv/lib/python3.8/site-packages/torch_geometric/utils/_train_test_split_edges.py", line 61, in train_test_split_edges
    n_v = int(math.floor(val_ratio * row.size(0)))
TypeError: 'int' object is not callable
