Results will be saved in results/world_trade_1995_20240606123250
Command line input: python seal_link_pred.py --dataset world_trade_1995 --fast_split --num_hops 1 --use_feature --eval_steps 1 --epochs 10 --dynamic_train --dynamic_val --dynamic_test --train_percent 2 --val_percent 1 --test_percent 1
 is saved.
data unavailable, downloading...
  0%|          | 0/4981 [00:00<?, ?it/s]  1%|          | 56/4981 [00:00<00:08, 556.96it/s]  2%|▏         | 115/4981 [00:00<00:08, 575.74it/s]  4%|▎         | 175/4981 [00:00<00:08, 580.37it/s]  5%|▍         | 235/4981 [00:00<00:08, 586.81it/s]  6%|▌         | 295/4981 [00:00<00:07, 589.02it/s]  7%|▋         | 355/4981 [00:00<00:07, 591.86it/s]  8%|▊         | 415/4981 [00:00<00:07, 588.67it/s] 10%|▉         | 475/4981 [00:00<00:07, 591.74it/s] 11%|█         | 535/4981 [00:00<00:07, 592.14it/s] 12%|█▏        | 597/4981 [00:01<00:07, 597.14it/s] 13%|█▎        | 657/4981 [00:01<00:07, 588.46it/s] 14%|█▍        | 716/4981 [00:01<00:07, 583.69it/s] 16%|█▌        | 776/4981 [00:01<00:07, 586.27it/s] 17%|█▋        | 836/4981 [00:01<00:07, 587.17it/s] 18%|█▊        | 896/4981 [00:01<00:06, 589.09it/s] 19%|█▉        | 957/4981 [00:01<00:06, 593.81it/s] 20%|██        | 1017/4981 [00:01<00:06, 594.26it/s] 22%|██▏       | 1077/4981 [00:01<00:06, 592.76it/s] 23%|██▎       | 1138/4981 [00:01<00:06, 595.26it/s] 24%|██▍       | 1198/4981 [00:02<00:06, 594.37it/s] 25%|██▌       | 1258/4981 [00:02<00:08, 438.38it/s] 26%|██▋       | 1319/4981 [00:02<00:07, 478.33it/s] 28%|██▊       | 1379/4981 [00:02<00:07, 509.11it/s] 29%|██▉       | 1440/4981 [00:02<00:06, 534.34it/s] 30%|███       | 1501/4981 [00:02<00:06, 553.21it/s] 31%|███▏      | 1563/4981 [00:02<00:05, 571.02it/s] 33%|███▎      | 1623/4981 [00:02<00:05, 573.55it/s] 34%|███▍      | 1685/4981 [00:02<00:05, 585.94it/s] 35%|███▌      | 1746/4981 [00:03<00:05, 592.68it/s] 36%|███▋      | 1807/4981 [00:03<00:05, 596.99it/s] 38%|███▊      | 1868/4981 [00:03<00:05, 596.31it/s] 39%|███▊      | 1929/4981 [00:03<00:05, 599.34it/s] 40%|███▉      | 1990/4981 [00:03<00:04, 601.53it/s] 41%|████      | 2051/4981 [00:03<00:04, 601.14it/s] 42%|████▏     | 2112/4981 [00:03<00:04, 600.52it/s] 44%|████▎     | 2173/4981 [00:03<00:04, 598.61it/s] 45%|████▍     | 2235/4981 [00:03<00:04, 599.86it/s] 46%|████▌     | 2296/4981 [00:03<00:04, 597.64it/s] 47%|████▋     | 2356/4981 [00:04<00:04, 598.26it/s] 49%|████▊     | 2416/4981 [00:04<00:04, 597.89it/s] 50%|████▉     | 2476/4981 [00:04<00:04, 594.74it/s] 51%|█████     | 2537/4981 [00:04<00:04, 598.14it/s] 52%|█████▏    | 2597/4981 [00:04<00:04, 591.70it/s] 53%|█████▎    | 2659/4981 [00:04<00:03, 599.25it/s] 55%|█████▍    | 2720/4981 [00:04<00:03, 601.71it/s] 56%|█████▌    | 2781/4981 [00:04<00:03, 594.28it/s] 57%|█████▋    | 2844/4981 [00:04<00:03, 600.17it/s] 58%|█████▊    | 2906/4981 [00:04<00:03, 604.91it/s] 60%|█████▉    | 2967/4981 [00:05<00:03, 602.39it/s] 61%|██████    | 3028/4981 [00:05<00:03, 599.79it/s] 62%|██████▏   | 3089/4981 [00:05<00:03, 597.89it/s] 63%|██████▎   | 3152/4981 [00:05<00:03, 600.48it/s] 65%|██████▍   | 3215/4981 [00:05<00:02, 601.92it/s] 66%|██████▌   | 3276/4981 [00:05<00:02, 602.26it/s] 67%|██████▋   | 3337/4981 [00:05<00:02, 601.44it/s] 68%|██████▊   | 3398/4981 [00:05<00:02, 603.11it/s] 69%|██████▉   | 3459/4981 [00:05<00:02, 600.35it/s] 71%|███████   | 3520/4981 [00:06<00:02, 600.43it/s] 72%|███████▏  | 3581/4981 [00:06<00:02, 600.25it/s] 73%|███████▎  | 3642/4981 [00:06<00:02, 601.38it/s] 74%|███████▍  | 3703/4981 [00:06<00:02, 456.35it/s] 76%|███████▌  | 3764/4981 [00:06<00:02, 491.87it/s] 77%|███████▋  | 3824/4981 [00:06<00:02, 518.96it/s] 78%|███████▊  | 3884/4981 [00:06<00:02, 537.09it/s] 79%|███████▉  | 3945/4981 [00:06<00:01, 557.15it/s] 80%|████████  | 4006/4981 [00:06<00:01, 570.37it/s] 82%|████████▏ | 4066/4981 [00:07<00:01, 577.31it/s] 83%|████████▎ | 4127/4981 [00:07<00:01, 586.07it/s] 84%|████████▍ | 4188/4981 [00:07<00:01, 591.26it/s] 85%|████████▌ | 4248/4981 [00:07<00:01, 591.06it/s] 86%|████████▋ | 4308/4981 [00:07<00:01, 592.15it/s] 88%|████████▊ | 4369/4981 [00:07<00:01, 596.06it/s] 89%|████████▉ | 4430/4981 [00:07<00:00, 598.46it/s] 90%|█████████ | 4490/4981 [00:07<00:00, 594.51it/s] 91%|█████████▏| 4550/4981 [00:07<00:00, 594.63it/s] 93%|█████████▎| 4610/4981 [00:07<00:00, 596.09it/s] 94%|█████████▍| 4670/4981 [00:08<00:00, 596.48it/s] 95%|█████████▍| 4730/4981 [00:08<00:00, 591.43it/s] 96%|█████████▌| 4790/4981 [00:08<00:00, 593.00it/s] 97%|█████████▋| 4850/4981 [00:08<00:00, 594.24it/s] 99%|█████████▊| 4910/4981 [00:08<00:00, 584.83it/s]100%|█████████▉| 4969/4981 [00:08<00:00, 584.98it/s]4982it [00:08, 580.97it/s]                          
0it [00:00, ?it/s]1it [00:00, 701.86it/s]
data Data(edge_index=[2, 4981382], num_nodes=238)
split_edge {'train': {'edge': tensor([[190,  99],
        [ 58,  24],
        [ 93,  95],
        ...,
        [  9,  96],
        [ 23,  53],
        [190, 137]]), 'edge_neg': tensor([], size=(0, 2), dtype=torch.int64)}, 'valid': {'edge': tensor([[ 62,  88],
        [ 78, 199],
        [206,  58],
        ...,
        [ 78,  69],
        [ 17, 101],
        [ 17, 206]]), 'edge_neg': tensor([], size=(0, 2), dtype=torch.int64)}, 'test': {'edge': tensor([[123, 225],
        [  9,  13],
        [123, 187],
        ...,
        [123, 191],
        [155, 165],
        [206, 232]]), 'edge_neg': tensor([], size=(0, 2), dtype=torch.int64)}}
Traceback (most recent call last):
  File "seal_link_pred.py", line 1052, in <module>
    model = DGCNN(
  File "/grphome/grp_supplychainai/SEAL_OGB/models.py", line 154, in __init__
    num_nodes = sorted([g.num_nodes for g in sampled_train])
  File "/grphome/grp_supplychainai/SEAL_OGB/models.py", line 154, in <listcomp>
    num_nodes = sorted([g.num_nodes for g in sampled_train])
  File "/grphome/grp_supplychainai/.conda/envs/sealenv/lib/python3.8/site-packages/torch_geometric/data/dataset.py", line 298, in __iter__
    yield self[i]
  File "/grphome/grp_supplychainai/.conda/envs/sealenv/lib/python3.8/site-packages/torch_geometric/data/dataset.py", line 289, in __getitem__
    data = self.get(self.indices()[idx])
IndexError: range object index out of range
