Results will be saved in results/world_trade_1995_20240606140655
Command line input: python seal_link_pred.py --dataset world_trade_1995 --fast_split --num_hops 1 --use_feature --eval_steps 1 --epochs 10 --dynamic_train --dynamic_val --dynamic_test --train_percent 2 --val_percent 1 --test_percent 1
 is saved.
data unavailable, downloading...
  0%|          | 0/4981 [00:00<?, ?it/s]  1%|          | 57/4981 [00:00<00:08, 565.41it/s]  2%|▏         | 116/4981 [00:00<00:08, 577.87it/s]  4%|▎         | 176/4981 [00:00<00:08, 584.12it/s]  5%|▍         | 236/4981 [00:00<00:08, 588.95it/s]  6%|▌         | 297/4981 [00:00<00:07, 588.15it/s]  7%|▋         | 357/4981 [00:00<00:07, 591.73it/s]  8%|▊         | 417/4981 [00:00<00:07, 592.66it/s] 10%|▉         | 478/4981 [00:00<00:07, 596.08it/s] 11%|█         | 538/4981 [00:00<00:07, 596.14it/s] 12%|█▏        | 599/4981 [00:01<00:07, 599.10it/s] 13%|█▎        | 659/4981 [00:01<00:07, 597.54it/s] 14%|█▍        | 719/4981 [00:01<00:07, 592.34it/s] 16%|█▌        | 779/4981 [00:01<00:07, 591.39it/s] 17%|█▋        | 840/4981 [00:01<00:06, 594.82it/s] 18%|█▊        | 900/4981 [00:01<00:06, 595.41it/s] 19%|█▉        | 961/4981 [00:01<00:06, 597.82it/s] 20%|██        | 1021/4981 [00:01<00:06, 595.11it/s] 22%|██▏       | 1081/4981 [00:01<00:06, 593.73it/s] 23%|██▎       | 1143/4981 [00:01<00:06, 599.38it/s] 24%|██▍       | 1203/4981 [00:02<00:06, 598.49it/s] 25%|██▌       | 1263/4981 [00:02<00:08, 446.13it/s] 27%|██▋       | 1324/4981 [00:02<00:07, 485.47it/s] 28%|██▊       | 1383/4981 [00:02<00:07, 511.83it/s] 29%|██▉       | 1446/4981 [00:02<00:06, 539.12it/s] 30%|███       | 1507/4981 [00:02<00:06, 557.71it/s] 31%|███▏      | 1568/4981 [00:02<00:05, 571.73it/s] 33%|███▎      | 1627/4981 [00:02<00:05, 568.33it/s] 34%|███▍      | 1687/4981 [00:02<00:05, 577.00it/s] 35%|███▌      | 1748/4981 [00:03<00:05, 585.67it/s] 36%|███▋      | 1809/4981 [00:03<00:05, 590.88it/s] 38%|███▊      | 1869/4981 [00:03<00:05, 591.41it/s] 39%|███▉      | 1932/4981 [00:03<00:05, 600.55it/s] 40%|████      | 1993/4981 [00:03<00:04, 601.68it/s] 41%|████      | 2054/4981 [00:03<00:04, 598.20it/s] 42%|████▏     | 2116/4981 [00:03<00:04, 600.82it/s] 44%|████▎     | 2177/4981 [00:03<00:04, 602.92it/s] 45%|████▍     | 2238/4981 [00:03<00:04, 602.92it/s] 46%|████▌     | 2299/4981 [00:03<00:04, 601.82it/s] 47%|████▋     | 2360/4981 [00:04<00:04, 597.25it/s] 49%|████▊     | 2421/4981 [00:04<00:04, 598.92it/s] 50%|████▉     | 2481/4981 [00:04<00:04, 597.16it/s] 51%|█████     | 2542/4981 [00:04<00:04, 599.54it/s] 52%|█████▏    | 2603/4981 [00:04<00:03, 600.30it/s] 53%|█████▎    | 2664/4981 [00:04<00:03, 600.00it/s] 55%|█████▍    | 2725/4981 [00:04<00:03, 597.84it/s] 56%|█████▌    | 2786/4981 [00:04<00:03, 601.36it/s] 57%|█████▋    | 2847/4981 [00:04<00:03, 601.79it/s] 58%|█████▊    | 2908/4981 [00:04<00:03, 601.42it/s] 60%|█████▉    | 2969/4981 [00:05<00:03, 597.44it/s] 61%|██████    | 3030/4981 [00:05<00:03, 600.29it/s] 62%|██████▏   | 3091/4981 [00:05<00:03, 597.34it/s] 63%|██████▎   | 3152/4981 [00:05<00:03, 598.97it/s] 65%|██████▍   | 3215/4981 [00:05<00:02, 603.02it/s] 66%|██████▌   | 3276/4981 [00:05<00:02, 600.88it/s] 67%|██████▋   | 3337/4981 [00:05<00:02, 601.05it/s] 68%|██████▊   | 3399/4981 [00:05<00:02, 601.64it/s] 69%|██████▉   | 3461/4981 [00:05<00:02, 604.91it/s] 71%|███████   | 3522/4981 [00:06<00:02, 603.21it/s] 72%|███████▏  | 3583/4981 [00:06<00:02, 599.77it/s] 73%|███████▎  | 3644/4981 [00:06<00:02, 601.19it/s] 74%|███████▍  | 3706/4981 [00:06<00:02, 605.10it/s] 76%|███████▌  | 3767/4981 [00:06<00:02, 450.82it/s] 77%|███████▋  | 3828/4981 [00:06<00:02, 487.32it/s] 78%|███████▊  | 3887/4981 [00:06<00:02, 513.27it/s] 79%|███████▉  | 3948/4981 [00:06<00:01, 538.83it/s] 81%|████████  | 4010/4981 [00:06<00:01, 559.67it/s] 82%|████████▏ | 4071/4981 [00:07<00:01, 572.47it/s] 83%|████████▎ | 4133/4981 [00:07<00:01, 584.47it/s] 84%|████████▍ | 4195/4981 [00:07<00:01, 593.85it/s] 85%|████████▌ | 4256/4981 [00:07<00:01, 591.67it/s] 87%|████████▋ | 4318/4981 [00:07<00:01, 596.95it/s] 88%|████████▊ | 4381/4981 [00:07<00:01, 598.69it/s] 89%|████████▉ | 4442/4981 [00:07<00:00, 595.21it/s] 90%|█████████ | 4502/4981 [00:07<00:00, 591.20it/s] 92%|█████████▏| 4563/4981 [00:07<00:00, 596.43it/s] 93%|█████████▎| 4623/4981 [00:07<00:00, 595.02it/s] 94%|█████████▍| 4684/4981 [00:08<00:00, 597.35it/s] 95%|█████████▌| 4745/4981 [00:08<00:00, 598.19it/s] 97%|█████████▋| 4807/4981 [00:08<00:00, 602.03it/s] 98%|█████████▊| 4868/4981 [00:08<00:00, 603.88it/s] 99%|█████████▉| 4929/4981 [00:08<00:00, 601.52it/s]4982it [00:08, 583.38it/s]                          
0it [00:00, ?it/s]1it [00:00, 679.46it/s]
data Data(edge_index=[2, 4981382], num_nodes=238)
train split - num_nodes: 238, num_pos_samples: 3486968
valid split - num_nodes: 238, num_pos_samples: 498138
test split - num_nodes: 238, num_pos_samples: 996276
split_edge {'train': {'edge': tensor([[224, 230],
        [ 58,  42],
        [ 35, 161],
        ...,
        [ 78, 167],
        [ 78,  52],
        [101, 100]]), 'edge_neg': tensor([], size=(0, 2), dtype=torch.int64)}, 'valid': {'edge': tensor([[225,  93],
        [ 42, 135],
        [194, 172],
        ...,
        [ 78, 172],
        [197, 198],
        [ 54, 141]]), 'edge_neg': tensor([], size=(0, 2), dtype=torch.int64)}, 'test': {'edge': tensor([[206, 225],
        [225,  99],
        [109, 123],
        ...,
        [227, 214],
        [115, 132],
        [ 51,  45]]), 'edge_neg': tensor([], size=(0, 2), dtype=torch.int64)}}
Traceback (most recent call last):
  File "seal_link_pred.py", line 1054, in <module>
    model = DGCNN(
  File "/grphome/grp_supplychainai/SEAL_OGB/models.py", line 154, in __init__
    num_nodes = sorted([g.num_nodes for g in sampled_train])
  File "/grphome/grp_supplychainai/SEAL_OGB/models.py", line 154, in <listcomp>
    num_nodes = sorted([g.num_nodes for g in sampled_train])
  File "/grphome/grp_supplychainai/.conda/envs/sealenv/lib/python3.8/site-packages/torch_geometric/data/dataset.py", line 298, in __iter__
    yield self[i]
  File "/grphome/grp_supplychainai/.conda/envs/sealenv/lib/python3.8/site-packages/torch_geometric/data/dataset.py", line 289, in __getitem__
    data = self.get(self.indices()[idx])
IndexError: range object index out of range
