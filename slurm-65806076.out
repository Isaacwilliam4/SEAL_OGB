Results will be saved in results/world_trade_1995_20240606141605
Command line input: python seal_link_pred.py --dataset world_trade_1995 --fast_split --num_hops 1 --use_feature --eval_steps 1 --epochs 10 --dynamic_train --dynamic_val --dynamic_test --train_percent 2 --val_percent 1 --test_percent 1
 is saved.
data unavailable, downloading...
  0%|          | 0/4981 [00:00<?, ?it/s]  1%|          | 57/4981 [00:00<00:08, 565.23it/s]  2%|▏         | 116/4981 [00:00<00:08, 578.66it/s]  4%|▎         | 175/4981 [00:00<00:08, 582.26it/s]  5%|▍         | 234/4981 [00:00<00:08, 584.45it/s]  6%|▌         | 294/4981 [00:00<00:07, 588.43it/s]  7%|▋         | 355/4981 [00:00<00:07, 591.13it/s]  8%|▊         | 415/4981 [00:00<00:07, 587.42it/s] 10%|▉         | 475/4981 [00:00<00:07, 589.68it/s] 11%|█         | 534/4981 [00:00<00:07, 589.72it/s] 12%|█▏        | 596/4981 [00:01<00:07, 596.94it/s] 13%|█▎        | 656/4981 [00:01<00:07, 595.00it/s] 14%|█▍        | 716/4981 [00:01<00:07, 585.33it/s] 16%|█▌        | 776/4981 [00:01<00:07, 588.15it/s] 17%|█▋        | 836/4981 [00:01<00:07, 586.91it/s] 18%|█▊        | 897/4981 [00:01<00:06, 591.93it/s] 19%|█▉        | 957/4981 [00:01<00:06, 586.61it/s] 20%|██        | 1017/4981 [00:01<00:06, 589.04it/s] 22%|██▏       | 1076/4981 [00:01<00:06, 587.80it/s] 23%|██▎       | 1138/4981 [00:01<00:06, 592.54it/s] 24%|██▍       | 1199/4981 [00:02<00:06, 595.97it/s] 25%|██▌       | 1259/4981 [00:02<00:08, 446.42it/s] 26%|██▋       | 1319/4981 [00:02<00:07, 482.69it/s] 28%|██▊       | 1380/4981 [00:02<00:07, 514.23it/s] 29%|██▉       | 1440/4981 [00:02<00:06, 536.07it/s] 30%|███       | 1501/4981 [00:02<00:06, 555.83it/s] 31%|███▏      | 1561/4981 [00:02<00:06, 567.50it/s] 33%|███▎      | 1622/4981 [00:02<00:05, 577.95it/s] 34%|███▎      | 1681/4981 [00:02<00:05, 578.44it/s] 35%|███▍      | 1743/4981 [00:03<00:05, 585.96it/s] 36%|███▌      | 1805/4981 [00:03<00:05, 595.20it/s] 37%|███▋      | 1865/4981 [00:03<00:05, 595.71it/s] 39%|███▊      | 1925/4981 [00:03<00:05, 596.33it/s] 40%|███▉      | 1986/4981 [00:03<00:05, 598.70it/s] 41%|████      | 2047/4981 [00:03<00:04, 597.53it/s] 42%|████▏     | 2108/4981 [00:03<00:04, 599.44it/s] 44%|████▎     | 2169/4981 [00:03<00:04, 595.47it/s] 45%|████▍     | 2230/4981 [00:03<00:04, 598.27it/s] 46%|████▌     | 2291/4981 [00:03<00:04, 598.49it/s] 47%|████▋     | 2353/4981 [00:04<00:04, 602.70it/s] 48%|████▊     | 2414/4981 [00:04<00:04, 594.76it/s] 50%|████▉     | 2474/4981 [00:04<00:04, 592.16it/s] 51%|█████     | 2535/4981 [00:04<00:04, 594.73it/s] 52%|█████▏    | 2595/4981 [00:04<00:04, 594.36it/s] 53%|█████▎    | 2655/4981 [00:04<00:03, 595.03it/s] 55%|█████▍    | 2717/4981 [00:04<00:03, 597.38it/s] 56%|█████▌    | 2778/4981 [00:04<00:03, 600.73it/s] 57%|█████▋    | 2839/4981 [00:04<00:03, 599.16it/s] 58%|█████▊    | 2899/4981 [00:04<00:03, 596.98it/s] 59%|█████▉    | 2959/4981 [00:05<00:03, 592.46it/s] 61%|██████    | 3019/4981 [00:05<00:03, 594.40it/s] 62%|██████▏   | 3079/4981 [00:05<00:03, 592.15it/s] 63%|██████▎   | 3140/4981 [00:05<00:03, 596.27it/s] 64%|██████▍   | 3201/4981 [00:05<00:02, 598.42it/s] 65%|██████▌   | 3261/4981 [00:05<00:02, 596.02it/s] 67%|██████▋   | 3321/4981 [00:05<00:02, 595.54it/s] 68%|██████▊   | 3381/4981 [00:05<00:02, 594.77it/s] 69%|██████▉   | 3442/4981 [00:05<00:02, 597.29it/s] 70%|███████   | 3502/4981 [00:06<00:02, 591.75it/s] 72%|███████▏  | 3562/4981 [00:06<00:02, 583.81it/s] 73%|███████▎  | 3624/4981 [00:06<00:02, 592.16it/s] 74%|███████▍  | 3684/4981 [00:06<00:02, 591.65it/s] 75%|███████▌  | 3744/4981 [00:06<00:02, 452.85it/s] 76%|███████▋  | 3803/4981 [00:06<00:02, 484.89it/s] 78%|███████▊  | 3864/4981 [00:06<00:02, 516.41it/s] 79%|███████▉  | 3925/4981 [00:06<00:01, 540.56it/s] 80%|███████▉  | 3984/4981 [00:06<00:01, 552.84it/s] 81%|████████  | 4047/4981 [00:07<00:01, 570.33it/s] 82%|████████▏ | 4108/4981 [00:07<00:01, 579.92it/s] 84%|████████▎ | 4168/4981 [00:07<00:01, 576.99it/s] 85%|████████▍ | 4229/4981 [00:07<00:01, 582.75it/s] 86%|████████▌ | 4290/4981 [00:07<00:01, 589.39it/s] 87%|████████▋ | 4351/4981 [00:07<00:01, 593.99it/s] 89%|████████▊ | 4413/4981 [00:07<00:00, 598.91it/s] 90%|████████▉ | 4474/4981 [00:07<00:00, 601.88it/s] 91%|█████████ | 4535/4981 [00:07<00:00, 594.80it/s] 92%|█████████▏| 4596/4981 [00:07<00:00, 597.57it/s] 93%|█████████▎| 4657/4981 [00:08<00:00, 595.12it/s] 95%|█████████▍| 4718/4981 [00:08<00:00, 597.81it/s] 96%|█████████▌| 4778/4981 [00:08<00:00, 596.00it/s] 97%|█████████▋| 4838/4981 [00:08<00:00, 585.00it/s] 98%|█████████▊| 4900/4981 [00:08<00:00, 593.45it/s]100%|█████████▉| 4960/4981 [00:08<00:00, 592.41it/s]4982it [00:08, 579.61it/s]                          
0it [00:00, ?it/s]1it [00:00, 667.35it/s]
data Data(edge_index=[2, 4981382], num_nodes=238)
train split - num_nodes: 238, num_pos_samples: 3486968
valid split - num_nodes: 238, num_pos_samples: 498138
test split - num_nodes: 238, num_pos_samples: 996276
split_edge {'train': {'edge': tensor([[100,  70],
        [101, 197],
        [ 70,  99],
        ...,
        [ 35, 184],
        [ 10, 197],
        [ 42, 155]]), 'edge_neg': tensor([], size=(0, 2), dtype=torch.int64)}, 'valid': {'edge': tensor([[129,  92],
        [ 78, 149],
        [ 70,  56],
        ...,
        [ 70, 214],
        [ 99, 225],
        [ 96,  70]]), 'edge_neg': tensor([], size=(0, 2), dtype=torch.int64)}, 'test': {'edge': tensor([[ 94,  78],
        [190,  66],
        [ 96, 167],
        ...,
        [137, 190],
        [199, 127],
        [109, 160]]), 'edge_neg': tensor([], size=(0, 2), dtype=torch.int64)}}
Traceback (most recent call last):
  File "seal_link_pred.py", line 1054, in <module>
    model = DGCNN(
  File "/grphome/grp_supplychainai/SEAL_OGB/models.py", line 154, in __init__
    num_nodes = sorted([g.num_nodes for g in sampled_train])
  File "/grphome/grp_supplychainai/SEAL_OGB/models.py", line 154, in <listcomp>
    num_nodes = sorted([g.num_nodes for g in sampled_train])
  File "/grphome/grp_supplychainai/.conda/envs/sealenv/lib/python3.8/site-packages/torch_geometric/data/dataset.py", line 298, in __iter__
    yield self[i]
  File "/grphome/grp_supplychainai/.conda/envs/sealenv/lib/python3.8/site-packages/torch_geometric/data/dataset.py", line 289, in __getitem__
    data = self.get(self.indices()[idx])
IndexError: range object index out of range
