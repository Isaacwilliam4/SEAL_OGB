Results will be saved in results/world_trade_1995_20240531163020
Command line input: python seal_link_pred.py --dataset world_trade_1995 --fast_split --num_hops 1 --use_feature --eval_steps 1 --epochs 10 --dynamic_train --dynamic_val --dynamic_test --train_percent 2 --val_percent 1 --test_percent 1
 is saved.
data unavailable, downloading...
  0%|          | 0/4981 [00:00<?, ?it/s]  1%|          | 41/4981 [00:00<00:12, 407.95it/s]  2%|▏         | 85/4981 [00:00<00:11, 417.94it/s]  3%|▎         | 127/4981 [00:00<00:11, 413.94it/s]  3%|▎         | 169/4981 [00:00<00:11, 413.43it/s]  4%|▍         | 212/4981 [00:00<00:11, 418.03it/s]  5%|▌         | 256/4981 [00:00<00:11, 423.63it/s]  6%|▌         | 299/4981 [00:00<00:11, 423.43it/s]  7%|▋         | 342/4981 [00:00<00:11, 417.86it/s]  8%|▊         | 386/4981 [00:00<00:10, 423.50it/s]  9%|▊         | 429/4981 [00:01<00:10, 422.46it/s] 10%|▉         | 474/4981 [00:01<00:10, 428.98it/s] 10%|█         | 518/4981 [00:01<00:10, 429.65it/s] 11%|█▏        | 562/4981 [00:01<00:10, 431.98it/s] 12%|█▏        | 606/4981 [00:01<00:10, 433.35it/s] 13%|█▎        | 650/4981 [00:01<00:10, 432.52it/s] 14%|█▍        | 694/4981 [00:01<00:10, 425.78it/s] 15%|█▍        | 738/4981 [00:01<00:09, 428.76it/s] 16%|█▌        | 781/4981 [00:01<00:09, 428.66it/s] 17%|█▋        | 824/4981 [00:01<00:09, 423.11it/s] 17%|█▋        | 867/4981 [00:02<00:09, 415.99it/s] 18%|█▊        | 911/4981 [00:02<00:09, 420.94it/s] 19%|█▉        | 955/4981 [00:02<00:09, 424.07it/s] 20%|██        | 999/4981 [00:02<00:09, 425.52it/s] 21%|██        | 1043/4981 [00:02<00:09, 429.52it/s] 22%|██▏       | 1088/4981 [00:02<00:08, 432.77it/s] 23%|██▎       | 1132/4981 [00:02<00:08, 433.66it/s] 24%|██▎       | 1177/4981 [00:02<00:08, 437.29it/s] 25%|██▍       | 1221/4981 [00:03<00:12, 294.04it/s] 25%|██▌       | 1267/4981 [00:03<00:11, 330.57it/s] 26%|██▋       | 1310/4981 [00:03<00:10, 353.82it/s] 27%|██▋       | 1355/4981 [00:03<00:09, 377.75it/s] 28%|██▊       | 1402/4981 [00:03<00:08, 399.60it/s] 29%|██▉       | 1449/4981 [00:03<00:08, 418.13it/s] 30%|███       | 1496/4981 [00:03<00:08, 429.56it/s] 31%|███       | 1546/4981 [00:03<00:07, 448.23it/s] 32%|███▏      | 1592/4981 [00:03<00:07, 443.99it/s] 33%|███▎      | 1638/4981 [00:03<00:07, 446.43it/s] 34%|███▍      | 1685/4981 [00:04<00:07, 452.18it/s] 35%|███▍      | 1733/4981 [00:04<00:07, 459.56it/s] 36%|███▌      | 1780/4981 [00:04<00:07, 443.70it/s] 37%|███▋      | 1826/4981 [00:04<00:07, 447.38it/s] 38%|███▊      | 1872/4981 [00:04<00:06, 449.69it/s] 39%|███▊      | 1918/4981 [00:04<00:06, 447.12it/s] 39%|███▉      | 1964/4981 [00:04<00:06, 446.43it/s] 40%|████      | 2012/4981 [00:04<00:06, 454.65it/s] 41%|████▏     | 2058/4981 [00:04<00:06, 450.91it/s] 42%|████▏     | 2104/4981 [00:04<00:06, 444.36it/s] 43%|████▎     | 2150/4981 [00:05<00:06, 447.47it/s] 44%|████▍     | 2197/4981 [00:05<00:06, 448.69it/s] 45%|████▌     | 2242/4981 [00:05<00:06, 443.61it/s] 46%|████▌     | 2287/4981 [00:05<00:06, 444.32it/s] 47%|████▋     | 2332/4981 [00:05<00:05, 445.13it/s] 48%|████▊     | 2377/4981 [00:05<00:05, 444.09it/s] 49%|████▊     | 2422/4981 [00:05<00:05, 435.98it/s] 50%|████▉     | 2466/4981 [00:05<00:05, 436.63it/s] 50%|█████     | 2511/4981 [00:05<00:05, 439.82it/s] 51%|█████▏    | 2556/4981 [00:06<00:05, 438.32it/s] 52%|█████▏    | 2600/4981 [00:06<00:05, 435.92it/s] 53%|█████▎    | 2645/4981 [00:06<00:05, 438.40it/s] 54%|█████▍    | 2691/4981 [00:06<00:05, 444.12it/s] 55%|█████▍    | 2737/4981 [00:06<00:05, 444.83it/s] 56%|█████▌    | 2783/4981 [00:06<00:04, 447.62it/s] 57%|█████▋    | 2831/4981 [00:06<00:04, 449.52it/s] 58%|█████▊    | 2876/4981 [00:06<00:04, 445.91it/s] 59%|█████▊    | 2922/4981 [00:06<00:04, 448.08it/s] 60%|█████▉    | 2967/4981 [00:06<00:04, 445.41it/s] 61%|██████    | 3014/4981 [00:07<00:04, 449.74it/s] 61%|██████▏   | 3060/4981 [00:07<00:04, 451.98it/s] 62%|██████▏   | 3108/4981 [00:07<00:04, 454.15it/s] 63%|██████▎   | 3156/4981 [00:07<00:03, 460.74it/s] 64%|██████▍   | 3205/4981 [00:07<00:03, 467.74it/s] 65%|██████▌   | 3252/4981 [00:07<00:03, 464.43it/s] 66%|██████▌   | 3299/4981 [00:07<00:03, 465.30it/s] 67%|██████▋   | 3347/4981 [00:07<00:03, 469.60it/s] 68%|██████▊   | 3394/4981 [00:07<00:03, 464.94it/s] 69%|██████▉   | 3441/4981 [00:07<00:03, 464.88it/s] 70%|███████   | 3488/4981 [00:08<00:03, 463.96it/s] 71%|███████   | 3537/4981 [00:08<00:03, 467.62it/s] 72%|███████▏  | 3585/4981 [00:08<00:02, 469.44it/s] 73%|███████▎  | 3632/4981 [00:08<00:02, 458.27it/s] 74%|███████▍  | 3678/4981 [00:08<00:04, 308.48it/s] 75%|███████▍  | 3729/4981 [00:08<00:03, 351.83it/s] 76%|███████▌  | 3776/4981 [00:08<00:03, 378.37it/s] 77%|███████▋  | 3819/4981 [00:08<00:02, 390.71it/s] 78%|███████▊  | 3865/4981 [00:09<00:02, 407.17it/s] 79%|███████▊  | 3911/4981 [00:09<00:02, 421.39it/s] 79%|███████▉  | 3957/4981 [00:09<00:02, 430.96it/s] 80%|████████  | 4002/4981 [00:09<00:02, 433.43it/s] 81%|████████▏ | 4049/4981 [00:09<00:02, 443.33it/s] 82%|████████▏ | 4096/4981 [00:09<00:01, 448.84it/s] 83%|████████▎ | 4142/4981 [00:09<00:01, 447.92it/s] 84%|████████▍ | 4188/4981 [00:09<00:01, 450.84it/s] 85%|████████▌ | 4234/4981 [00:09<00:01, 451.53it/s] 86%|████████▌ | 4280/4981 [00:09<00:01, 450.06it/s] 87%|████████▋ | 4326/4981 [00:10<00:01, 449.61it/s] 88%|████████▊ | 4372/4981 [00:10<00:01, 451.58it/s] 89%|████████▊ | 4419/4981 [00:10<00:01, 452.68it/s] 90%|████████▉ | 4468/4981 [00:10<00:01, 462.91it/s] 91%|█████████ | 4515/4981 [00:10<00:01, 450.21it/s] 92%|█████████▏| 4562/4981 [00:10<00:00, 453.53it/s] 93%|█████████▎| 4608/4981 [00:10<00:00, 451.55it/s] 93%|█████████▎| 4654/4981 [00:10<00:00, 451.14it/s] 94%|█████████▍| 4700/4981 [00:10<00:00, 452.66it/s] 95%|█████████▌| 4746/4981 [00:10<00:00, 448.76it/s] 96%|█████████▌| 4791/4981 [00:11<00:00, 448.37it/s] 97%|█████████▋| 4838/4981 [00:11<00:00, 451.28it/s] 98%|█████████▊| 4884/4981 [00:11<00:00, 447.37it/s] 99%|█████████▉| 4931/4981 [00:11<00:00, 452.16it/s]100%|█████████▉| 4977/4981 [00:11<00:00, 447.37it/s]4982it [00:11, 433.30it/s]                          
0it [00:00, ?it/s]1it [00:00, 554.73it/s]
edge_index: tensor([[  0,   0,   0,  ..., 237, 237, 237],
        [  2,   4,   9,  ..., 229, 229, 236]])
Type of edge_index: <class 'torch.Tensor'>
Shape of edge_index: torch.Size([2, 4981382])
edge_attr: [[1995 841510 36.687 '        5.812']
 [1995 570110 11.06 '        0.195']
 [1995 80620 11.804 '       15.000']
 ...
 [1995 360300 13.508 '        0.566']
 [1995 491000 1.035 '        0.050']
 [1995 430110 3.345 '           NA']]
Type of edge_attr: <class 'numpy.ndarray'>
Shape of edge_attr: (4981382, 4)
split_edge (Data(edge_index=[2, 3486968], edge_attr=[3486968, 4], num_nodes=238, pos_edge_label=[3486968], pos_edge_label_index=[2, 3486968]), Data(edge_index=[2, 3486968], edge_attr=[3486968, 4], num_nodes=238, pos_edge_label=[498138], pos_edge_label_index=[2, 498138]), Data(edge_index=[2, 3985106], edge_attr=[3985106, 4], num_nodes=238, pos_edge_label=[996276], pos_edge_label_index=[2, 996276]))
Type of split_edge: <class 'tuple'>
Traceback (most recent call last):
  File "seal_link_pred.py", line 942, in <module>
    train_dataset = eval(dataset_class)(
  File "seal_link_pred.py", line 401, in __init__
    pos_edge, neg_edge = get_pos_neg_edges(
  File "/grphome/grp_supplychainai/SEAL_OGB/utils.py", line 281, in get_pos_neg_edges
    if "edge" in split_edge["train"]:
TypeError: tuple indices must be integers or slices, not str
