Results will be saved in results/world_trade_1995_20240606172000
Command line input: python seal_link_pred.py --dataset world_trade_1995 --fast_split --num_hops 1 --use_feature --eval_steps 1 --epochs 10 --dynamic_train --dynamic_val --dynamic_test --train_percent 2 --val_percent 1 --test_percent 1
 is saved.
data unavailable, downloading...
  0%|          | 0/4981 [00:00<?, ?it/s]  1%|          | 57/4981 [00:00<00:08, 566.95it/s]  2%|▏         | 116/4981 [00:00<00:08, 579.42it/s]  4%|▎         | 175/4981 [00:00<00:08, 577.69it/s]  5%|▍         | 235/4981 [00:00<00:08, 583.96it/s]  6%|▌         | 294/4981 [00:00<00:08, 585.80it/s]  7%|▋         | 355/4981 [00:00<00:07, 589.50it/s]  8%|▊         | 414/4981 [00:00<00:07, 584.63it/s] 10%|▉         | 475/4981 [00:00<00:07, 591.47it/s] 11%|█         | 535/4981 [00:00<00:07, 588.23it/s] 12%|█▏        | 597/4981 [00:01<00:07, 593.19it/s] 13%|█▎        | 657/4981 [00:01<00:07, 592.63it/s] 14%|█▍        | 717/4981 [00:01<00:07, 587.81it/s] 16%|█▌        | 777/4981 [00:01<00:07, 589.67it/s] 17%|█▋        | 836/4981 [00:01<00:07, 588.98it/s] 18%|█▊        | 896/4981 [00:01<00:06, 590.02it/s] 19%|█▉        | 957/4981 [00:01<00:06, 594.05it/s] 20%|██        | 1017/4981 [00:01<00:06, 594.51it/s] 22%|██▏       | 1077/4981 [00:01<00:06, 593.25it/s] 23%|██▎       | 1138/4981 [00:01<00:06, 595.95it/s] 24%|██▍       | 1198/4981 [00:02<00:08, 445.17it/s] 25%|██▌       | 1257/4981 [00:02<00:07, 478.28it/s] 26%|██▋       | 1319/4981 [00:02<00:07, 511.34it/s] 28%|██▊       | 1379/4981 [00:02<00:06, 534.71it/s] 29%|██▉       | 1440/4981 [00:02<00:06, 552.53it/s] 30%|███       | 1502/4981 [00:02<00:06, 571.26it/s] 31%|███▏      | 1562/4981 [00:02<00:05, 578.63it/s] 33%|███▎      | 1622/4981 [00:02<00:05, 584.79it/s] 34%|███▍      | 1683/4981 [00:02<00:05, 589.78it/s] 35%|███▍      | 1743/4981 [00:03<00:05, 590.40it/s] 36%|███▌      | 1805/4981 [00:03<00:05, 597.43it/s] 37%|███▋      | 1866/4981 [00:03<00:05, 599.25it/s] 39%|███▊      | 1927/4981 [00:03<00:05, 601.14it/s] 40%|███▉      | 1988/4981 [00:03<00:04, 600.57it/s] 41%|████      | 2049/4981 [00:03<00:04, 601.71it/s] 42%|████▏     | 2110/4981 [00:03<00:04, 599.49it/s] 44%|████▎     | 2171/4981 [00:03<00:04, 601.43it/s] 45%|████▍     | 2232/4981 [00:03<00:04, 601.15it/s] 46%|████▌     | 2293/4981 [00:03<00:04, 597.99it/s] 47%|████▋     | 2354/4981 [00:04<00:04, 596.43it/s] 48%|████▊     | 2415/4981 [00:04<00:04, 599.39it/s] 50%|████▉     | 2475/4981 [00:04<00:04, 592.27it/s] 51%|█████     | 2535/4981 [00:04<00:04, 592.74it/s] 52%|█████▏    | 2595/4981 [00:04<00:04, 593.11it/s] 53%|█████▎    | 2655/4981 [00:04<00:03, 587.45it/s] 55%|█████▍    | 2717/4981 [00:04<00:03, 593.74it/s] 56%|█████▌    | 2778/4981 [00:04<00:03, 598.28it/s] 57%|█████▋    | 2840/4981 [00:04<00:03, 602.01it/s] 58%|█████▊    | 2901/4981 [00:04<00:03, 595.42it/s] 59%|█████▉    | 2962/4981 [00:05<00:03, 598.96it/s] 61%|██████    | 3022/4981 [00:05<00:03, 599.26it/s] 62%|██████▏   | 3082/4981 [00:05<00:03, 598.59it/s] 63%|██████▎   | 3144/4981 [00:05<00:03, 603.26it/s] 64%|██████▍   | 3205/4981 [00:05<00:02, 604.60it/s] 66%|██████▌   | 3266/4981 [00:05<00:02, 595.03it/s] 67%|██████▋   | 3328/4981 [00:05<00:02, 601.52it/s] 68%|██████▊   | 3389/4981 [00:05<00:02, 600.26it/s] 69%|██████▉   | 3450/4981 [00:05<00:02, 599.43it/s] 70%|███████   | 3511/4981 [00:06<00:02, 602.38it/s] 72%|███████▏  | 3572/4981 [00:06<00:02, 601.22it/s] 73%|███████▎  | 3633/4981 [00:06<00:02, 601.79it/s] 74%|███████▍  | 3694/4981 [00:06<00:02, 448.30it/s] 75%|███████▌  | 3756/4981 [00:06<00:02, 488.31it/s] 77%|███████▋  | 3816/4981 [00:06<00:02, 516.68it/s] 78%|███████▊  | 3876/4981 [00:06<00:02, 538.69it/s] 79%|███████▉  | 3935/4981 [00:06<00:01, 551.38it/s] 80%|████████  | 3997/4981 [00:06<00:01, 566.80it/s] 81%|████████▏ | 4059/4981 [00:07<00:01, 581.99it/s] 83%|████████▎ | 4120/4981 [00:07<00:01, 587.97it/s] 84%|████████▍ | 4180/4981 [00:07<00:01, 587.55it/s] 85%|████████▌ | 4241/4981 [00:07<00:01, 592.44it/s] 86%|████████▋ | 4301/4981 [00:07<00:01, 594.63it/s] 88%|████████▊ | 4362/4981 [00:07<00:01, 596.18it/s] 89%|████████▉ | 4423/4981 [00:07<00:00, 598.17it/s] 90%|█████████ | 4483/4981 [00:07<00:00, 598.07it/s] 91%|█████████ | 4543/4981 [00:07<00:00, 595.88it/s] 92%|█████████▏| 4603/4981 [00:07<00:00, 579.25it/s] 94%|█████████▎| 4662/4981 [00:08<00:00, 561.71it/s] 95%|█████████▍| 4719/4981 [00:08<00:00, 544.69it/s] 96%|█████████▌| 4774/4981 [00:08<00:00, 535.04it/s] 97%|█████████▋| 4828/4981 [00:08<00:00, 535.64it/s] 98%|█████████▊| 4882/4981 [00:08<00:00, 528.11it/s] 99%|█████████▉| 4935/4981 [00:08<00:00, 523.96it/s]4982it [00:08, 574.16it/s]                          
0it [00:00, ?it/s]1it [00:00, 666.29it/s]
data Data(edge_index=[2, 4981382], edge_attr=[561, 4], num_nodes=238)
train split - num_nodes: 238, num_pos_samples: 3486968
valid split - num_nodes: 238, num_pos_samples: 498138
test split - num_nodes: 238, num_pos_samples: 996276
split_edge {'train': {'edge': tensor([[ 70, 137],
        [ 70,  56],
        [ 69,  66],
        ...,
        [227, 104],
        [ 17,  36],
        [141, 123]]), 'edge_neg': tensor([], size=(0, 2), dtype=torch.int64)}, 'valid': {'edge': tensor([[ 93, 207],
        [ 58,  24],
        [206, 225],
        ...,
        [ 10,  23],
        [ 56,  94],
        [227,  84]]), 'edge_neg': tensor([], size=(0, 2), dtype=torch.int64)}, 'test': {'edge': tensor([[ 56,  51],
        [109,  35],
        [191, 149],
        ...,
        [ 10,  94],
        [ 78,  53],
        [227, 164]]), 'edge_neg': tensor([], size=(0, 2), dtype=torch.int64)}}
Traceback (most recent call last):
  File "seal_link_pred.py", line 1061, in <module>
    model = DGCNN(
  File "/grphome/grp_supplychainai/SEAL_OGB/models.py", line 154, in __init__
    num_nodes = sorted([g.num_nodes for g in sampled_train])
  File "/grphome/grp_supplychainai/SEAL_OGB/models.py", line 154, in <listcomp>
    num_nodes = sorted([g.num_nodes for g in sampled_train])
  File "/grphome/grp_supplychainai/.conda/envs/sealenv/lib/python3.8/site-packages/torch_geometric/data/dataset.py", line 298, in __iter__
    yield self[i]
  File "/grphome/grp_supplychainai/.conda/envs/sealenv/lib/python3.8/site-packages/torch_geometric/data/dataset.py", line 289, in __getitem__
    data = self.get(self.indices()[idx])
IndexError: range object index out of range
