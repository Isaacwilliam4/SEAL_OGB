Results will be saved in results/world_trade_1995_20240531123733
Command line input: python seal_link_pred.py --dataset world_trade_1995 --fast_split --num_hops 1 --use_feature --eval_steps 1 --epochs 10 --dynamic_train --dynamic_val --dynamic_test --train_percent 2 --val_percent 1 --test_percent 1
 is saved.
data unavailable, downloading...
  0%|          | 0/4981 [00:00<?, ?it/s]  1%|          | 58/4981 [00:00<00:08, 578.86it/s]  2%|▏         | 117/4981 [00:00<00:08, 582.61it/s]  4%|▎         | 177/4981 [00:00<00:08, 590.45it/s]  5%|▍         | 238/4981 [00:00<00:07, 595.59it/s]  6%|▌         | 298/4981 [00:00<00:07, 594.64it/s]  7%|▋         | 359/4981 [00:00<00:07, 597.14it/s]  8%|▊         | 419/4981 [00:00<00:07, 590.44it/s] 10%|▉         | 481/4981 [00:00<00:07, 597.65it/s] 11%|█         | 541/4981 [00:00<00:07, 595.38it/s] 12%|█▏        | 603/4981 [00:01<00:07, 600.11it/s] 13%|█▎        | 664/4981 [00:01<00:07, 599.14it/s] 15%|█▍        | 724/4981 [00:01<00:07, 593.40it/s] 16%|█▌        | 784/4981 [00:01<00:07, 592.59it/s] 17%|█▋        | 844/4981 [00:01<00:06, 593.21it/s] 18%|█▊        | 905/4981 [00:01<00:06, 595.51it/s] 19%|█▉        | 968/4981 [00:01<00:06, 600.97it/s] 21%|██        | 1030/4981 [00:01<00:06, 606.12it/s] 22%|██▏       | 1091/4981 [00:01<00:06, 600.73it/s] 23%|██▎       | 1152/4981 [00:01<00:06, 603.37it/s] 24%|██▍       | 1213/4981 [00:02<00:08, 465.05it/s] 26%|██▌       | 1274/4981 [00:02<00:07, 500.00it/s] 27%|██▋       | 1335/4981 [00:02<00:06, 528.37it/s] 28%|██▊       | 1396/4981 [00:02<00:06, 550.36it/s] 29%|██▉       | 1459/4981 [00:02<00:06, 569.89it/s] 31%|███       | 1521/4981 [00:02<00:05, 582.15it/s] 32%|███▏      | 1582/4981 [00:02<00:05, 589.32it/s] 33%|███▎      | 1642/4981 [00:02<00:05, 588.80it/s] 34%|███▍      | 1704/4981 [00:02<00:05, 596.39it/s] 35%|███▌      | 1765/4981 [00:03<00:05, 598.61it/s] 37%|███▋      | 1827/4981 [00:03<00:05, 603.97it/s] 38%|███▊      | 1888/4981 [00:03<00:05, 600.61it/s] 39%|███▉      | 1950/4981 [00:03<00:05, 605.66it/s] 40%|████      | 2013/4981 [00:03<00:04, 610.97it/s] 42%|████▏     | 2075/4981 [00:03<00:04, 601.41it/s] 43%|████▎     | 2136/4981 [00:03<00:04, 602.51it/s] 44%|████▍     | 2198/4981 [00:03<00:04, 606.29it/s] 45%|████▌     | 2259/4981 [00:03<00:04, 602.73it/s] 47%|████▋     | 2321/4981 [00:03<00:04, 605.48it/s] 48%|████▊     | 2382/4981 [00:04<00:04, 605.59it/s] 49%|████▉     | 2443/4981 [00:04<00:04, 598.43it/s] 50%|█████     | 2504/4981 [00:04<00:04, 600.26it/s] 52%|█████▏    | 2566/4981 [00:04<00:04, 601.31it/s] 53%|█████▎    | 2627/4981 [00:04<00:03, 599.81it/s] 54%|█████▍    | 2689/4981 [00:04<00:03, 603.87it/s] 55%|█████▌    | 2750/4981 [00:04<00:03, 605.45it/s] 56%|█████▋    | 2812/4981 [00:04<00:03, 607.95it/s] 58%|█████▊    | 2873/4981 [00:04<00:03, 606.00it/s] 59%|█████▉    | 2934/4981 [00:04<00:03, 603.26it/s] 60%|██████    | 2995/4981 [00:05<00:03, 604.20it/s] 61%|██████▏   | 3056/4981 [00:05<00:03, 605.03it/s] 63%|██████▎   | 3117/4981 [00:05<00:03, 605.27it/s] 64%|██████▍   | 3179/4981 [00:05<00:02, 608.96it/s] 65%|██████▌   | 3240/4981 [00:05<00:02, 606.64it/s] 66%|██████▋   | 3301/4981 [00:05<00:02, 602.86it/s] 67%|██████▋   | 3362/4981 [00:05<00:02, 603.81it/s] 69%|██████▊   | 3424/4981 [00:05<00:02, 606.95it/s] 70%|██████▉   | 3485/4981 [00:05<00:02, 605.20it/s] 71%|███████   | 3547/4981 [00:05<00:02, 607.65it/s] 72%|███████▏  | 3608/4981 [00:06<00:02, 604.71it/s] 74%|███████▎  | 3669/4981 [00:06<00:02, 593.27it/s] 75%|███████▍  | 3729/4981 [00:06<00:02, 445.76it/s] 76%|███████▌  | 3790/4981 [00:06<00:02, 483.57it/s] 77%|███████▋  | 3851/4981 [00:06<00:02, 514.07it/s] 79%|███████▊  | 3912/4981 [00:06<00:01, 538.00it/s] 80%|███████▉  | 3972/4981 [00:06<00:01, 551.95it/s] 81%|████████  | 4035/4981 [00:06<00:01, 570.66it/s] 82%|████████▏ | 4097/4981 [00:07<00:01, 580.66it/s] 83%|████████▎ | 4159/4981 [00:07<00:01, 590.36it/s] 85%|████████▍ | 4220/4981 [00:07<00:01, 594.65it/s] 86%|████████▌ | 4281/4981 [00:07<00:01, 598.77it/s] 87%|████████▋ | 4342/4981 [00:07<00:01, 600.12it/s] 88%|████████▊ | 4403/4981 [00:07<00:00, 600.69it/s] 90%|████████▉ | 4464/4981 [00:07<00:00, 602.80it/s] 91%|█████████ | 4525/4981 [00:07<00:00, 596.05it/s] 92%|█████████▏| 4588/4981 [00:07<00:00, 600.93it/s] 93%|█████████▎| 4649/4981 [00:07<00:00, 599.94it/s] 95%|█████████▍| 4710/4981 [00:08<00:00, 598.91it/s] 96%|█████████▌| 4770/4981 [00:08<00:00, 597.25it/s] 97%|█████████▋| 4831/4981 [00:08<00:00, 599.96it/s] 98%|█████████▊| 4892/4981 [00:08<00:00, 602.19it/s] 99%|█████████▉| 4953/4981 [00:08<00:00, 598.88it/s]4982it [00:08, 587.10it/s]                          
0it [00:00, ?it/s]1it [00:00, 710.66it/s]
Traceback (most recent call last):
  File "seal_link_pred.py", line 929, in <module>
    train_dataset = eval(dataset_class)(
  File "seal_link_pred.py", line 391, in __init__
    pos_edge, neg_edge = get_pos_neg_edges(
  File "/grphome/grp_supplychainai/SEAL_OGB/utils.py", line 281, in get_pos_neg_edges
    if "edge" in split_edge["train"]:
TypeError: tuple indices must be integers or slices, not str
